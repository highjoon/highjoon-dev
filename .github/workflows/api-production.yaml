name: Api - Production Deployment

on:
  push:
    branches:
      - master
    paths:
      - "apps/api/**"
      - ".github/workflows/api-production.yaml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 브런치 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # pnpm 설치
      - name: Install pnpm
        run: npm install -g pnpm@9

      # 프로젝트 의존성 설치
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      # 빌드
      - name: Build
        run: pnpm build:api

      # 빌드 확인
      - name: Check Build
        run: ls -al ./apps/api/dist

      # AWS 인증
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 배포
      - name: Deploy to Lightsail
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_LIGHTSAIL_HOST }}
          username: ${{ secrets.AWS_LIGHTSAIL_USER_NAME }}
          key: ${{ secrets.AWS_LIGHTSAIL_SSH_KEY }}
          source: |
            package.json
            pnpm-lock.yaml
            apps/api/package.json
            apps/api/dist/*
          target: "/home/${{ secrets.AWS_LIGHTSAIL_USER_NAME }}/apps/api"

      # 의존성 설치 + PM2 프로세스 재시작
      - name: Restart PM2 process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_LIGHTSAIL_HOST }}
          username: ${{secrets.AWS_LIGHTSAIL_USER_NAME}}
          key: ${{ secrets.AWS_LIGHTSAIL_SSH_KEY }}
          script: |
            cd /home/${{ secrets.AWS_LIGHTSAIL_USER_NAME }}/apps/api
            pnpm install --frozen-lockfile
            pm2 restart app || pm2 start dist/index.js --name app
